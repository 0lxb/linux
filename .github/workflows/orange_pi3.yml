name: OrangePi3 Kernel ARM64 latest

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: build linux master
    runs-on: ubuntu-20.04

    steps:
    - name: cleanup ubuntu server
      env:
          DEBIAN_FRONTEND: noninteractive
      run: |
          sudo sed -i "s/\# deb-src/deb-src/g" /etc/apt/sources.list
          df -h
          echo "Removing docker images"
          docker rmi `docker images -q`
          df -h
          echo "Removing large directories"
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          echo "Listing 100 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 100
          df -h
          echo "Removing large packages"
          sudo apt-get remove -y azure-cli google-cloud-sdk hhvm google-chrome-stable firefox powershell mono-devel
          sudo -E apt-get -y purge ghc* zulu* llvm* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* moby* snapd* || true
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          sudo -E apt-get update
          sudo -E apt-get build-dep -y linux
          sudo -E apt-get install -y crossbuild-essential-arm64
          df -h
    - name: checkout
      uses: actions/checkout@v3
      with:
          ref: master

    - name: make defconfig
      run: make CROSS_COMPILE=aarch64-linux-gnu- ARCH=arm64 sun50iw6p1_orangepi3_defconfig

    - name: make all
      run: |
          make CROSS_COMPILE=aarch64-linux-gnu- ARCH=arm64 all
          make CROSS_COMPILE=aarch64-linux-gnu- ARCH=arm64 modules_install INSTALL_MOD_PATH=./tmp
          make CROSS_COMPILE=aarch64-linux-gnu- ARCH=arm64 headers_install INSTALL_HDR_PATH=./tmp

    - name: prepare artifact
      run: |
          mkdir -p ./artifact/
          #cp -rf $(find ./bin/targets/ -name "*.bin" -type f) ./artifact/
          cp -rf ./vmlinux ./artifact/
          cp -rf ./System.map ./artifact/
          cp -rf ./arch/arm64/boot/Image ./artifact/
          cp -rf ./arch/arm64/boot/dts/allwinner ./artifact/
          cp -rf ./tmp/lib ./artifact/
          cp -rf ./tmp/include ./artifact/

    - name: deliver firmware
      uses: actions/upload-artifact@v2
      with:
          name: openwrt_firmware
          path: ./artifact/
